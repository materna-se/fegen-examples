import de.materna.fegen.core.DiagnosticsLevel

buildscript {
    ext.kotlin_version = "1.3.61"
    repositories {
        // Specify this repo to use a locally built fegen plugin
        // This example project belongs to the project fegen-examples whose settings.gradle has an includeBuild
        // instruction, so it will use the plugins corresponding to the sources in the parent directory
        mavenLocal()
        // Specify this repo to use the publicly available version of fegen
        mavenCentral()
        jcenter()
        // For io.spring.gradle:dependency-management-plugin
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
        classpath "com.github.materna-se.fegen:fegen-web-gradle-plugin:1.0-RC3"
        classpath "com.github.materna-se.fegen:fegen-kotlin-gradle-plugin:1.0-RC3"
    }
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'de.materna.fegen.web'
apply plugin: 'de.materna.fegen.kotlin'

group 'com.github.materna-se.fegen.example.gradle'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "com.h2database:h2:1.4.200"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

fegenWeb {
    scanPkg = "de.materna.fegen.example.gradle"
    entityPkg = "de.materna.fegen.example.gradle.entity"
    repositoryPkg = "de.materna.fegen.example.gradle.repository"
    frontendPath = "../web-api/src"
    implicitNullable = DiagnosticsLevel.ERROR
}

fegenKotlin {
    scanPkg = "de.materna.fegen.example.gradle"
    frontendPath = "../kotlin-api/src/main/kotlin"
    frontendPkg = "de.materna.fegen.example.gradle.kotlin.api"
    implicitNullable = DiagnosticsLevel.ERROR
}
