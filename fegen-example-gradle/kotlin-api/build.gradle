buildscript {
    ext.kotlin_version = "1.3.41"
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

plugins {
    id "org.springframework.boot" version "2.2.4.RELEASE" apply false
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

group 'com.github.materna-se.fegen.example.gradle'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "com.h2database:h2:1.4.200"

    implementation "com.github.materna-se.fegen:fegen-kotlin-interservice-runtime:1.0-RC9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1"

    testImplementation("io.kotlintest:kotlintest-runner-junit5:3.3.3")
    testImplementation("io.kotlintest:kotlintest-extensions-spring:3.3.3")

    testImplementation "org.mockito:mockito-core:3.2.4"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

compileKotlin {
    // Make sure the code was generated by the latest generator and from the latest backend version
    dependsOn parent.project("backend").tasks.named("fegenKotlin")
}

test {
    // Make sure the backend was started before running tests
    dependsOn parent.startBackend
    // Make sure the backend was not stopped before running tests
    parent.stopBackend.mustRunAfter test

    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

