buildscript {
    ext.kotlin_version = "1.4.32"
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.plugin.jpa"
    id "io.spring.dependency-management"
}

group 'com.github.materna-se.fegen.example.gradle'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "com.github.materna-se.fegen:fegen-kotlin-runtime:1.0-RC9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.3"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3"

    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.4.2"
    testImplementation "io.kotlintest:kotlintest-extensions-spring:3.4.2"

    testImplementation "org.mockito:mockito-core:3.2.4"
}

compileKotlin {
    // Make sure the code was generated by the latest generator and from the latest backend version
    dependsOn parent.project("backend").tasks.named("fegenKotlin")
}

test {
    // Make sure the backend was started before running tests
    dependsOn parent.startBackend
    // Make sure the backend was not stopped before running tests
    parent.stopBackend.mustRunAfter test

    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

